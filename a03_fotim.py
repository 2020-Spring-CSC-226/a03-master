
# TODO Do not edit this file directly! Instead, create a new file called
# TODO a03_username.py and copy this code into it!

#################################################################################
# Author: Matthew Foti
# Username: Fotim
#
# Assignment: A03: A Pair of Fully Functional Gitty Psychedelic Robotic Turtles
# Purpose: To understand how to merge successfully
# Google Doc Link: https://github.com/2020-Spring-CSC-226/a03-master
#
#################################################################################
# Acknowledgements:
# Most of the Code was taken from my submission of A02: Loopy Turtles
#
#################################################################################

import turtle
from time import sleep

def move (t, x, y):
    """
    Moves the turtle to a specified location using X, Y coordinate pairs.
    :param t: The turtle to be moved
    :param x: The X coordinate
    :param y: The Y coordinate
    :return: None
    """
    t.up()
    t.setpos(x, y)
    t.down()


def OutsideRing(Outside, i):
    """
    Draws the outside ring
    :param Outside: The turtle
    :param i: an iterator for the while loop
    :return: None
    """
    move(Outside, -45, 170)
    while i < 3:  # The loop that creates the outer ring.
        i += 1
        Outside.fd(80)
        Outside.right(80)
        Outside.fd(20)
        Outside.left(65)
        Outside.circle(-100, 90)
        Outside.left(65)
        Outside.fd(20)
        Outside.right(80)
    i = 0





def InnerRing(Inside, i, k):

    """
    Draws the inside ring of the SCP logo
    :param Inside: The turtle
    :param i: an iterator for the first while loop
    :param k: an iterator for the second loop
    :return: None
    """
    move(Inside, -5, 115)
    while i < 3:  # The loop that creates the inner ring.
        i += 1
        Inside.circle(-70, 120)
        Inside.right(90)  # Turns to create each arrow.
        Inside.back(20)
        Inside.fd(60)
        Inside.right(90)
        Inside.fd(10)
        while k < 3:  # The loop that creates the tips of the arrows within the inner ring.
            k += 1
            Inside.left(120)
            Inside.fd(20)
        k = 0
        Inside.back(10)
        Inside.left(90)
        Inside.fd(10)
        Inside.back(50)
        Inside.left(90)  # The end of each arrow





def SCP(Letters):

    """
    Draws the letters S, C, and P
    :param Letters: The turtle
    :return: None
    """
    move(Letters, -67, -100)  # Draws the S
    Letters.fd(18)
    Letters.back(18)
    Letters.circle(-20, -180)
    Letters.circle(20, -180)
    Letters.back(18)
    move(Letters, 8, -102)  # Draws the C
    Letters.fd(10)
    Letters.back(10)
    Letters.circle(-38, -180)
    Letters.back(10)
    # print(Letters.pos())
    move(Letters, 38, -178)  # Draws the P
    Letters.right(90)
    Letters.fd(60)
    Letters.circle(-20, 270)

def DrawCat(Cat):

    """
    Draws a cat
    :param Cat: The turtle
    :return: None
    """
    move(Cat, -14, -210)
    Cat.fd(20)
    Cat.circle(10, 70) # Makes the Neck
    Cat.circle(-10, 70)
    Cat.left(80)
    Cat.fd(10)
    Cat.right(140) # Makes the ears
    Cat.fd(13)
    Cat.fd(-13)
    Cat.right(-140)
    Cat.fd(-10)
    Cat.left(-80)
    Cat.fd(8)
    Cat.circle(-5, 90) # Makes the Face
    Cat.circle(5, 90)
    Cat.circle(-3, 180)
    Cat.fd(3)
    Cat.circle(10, 90) # Begins working on the torso
    Cat.circle(-10, 90)
    Cat.fd(7)
    DrawCatLeg(Cat, 110)
    Cat.fd(7)
    DrawCatLeg(Cat, 70)
    Cat.fd(24)
    DrawCatLeg(Cat, 110)
    Cat.fd(7)
    DrawCatLeg(Cat, 70)
    Cat.fd(-3)
    Cat.circle(-10, 90) # Makes the rear end
    Cat.fd(3)
    Cat.circle(-10, 90)
    Cat.fd(10)
    Cat.fd(-10)
    Cat.circle(-10, -45) # Makes the tail.
    Cat.circle(10, -30)
    Cat.circle(-10, -90)
    Cat.circle(10, -90)

    move(Cat, -9, -230)
    Cat.up()
    Cat.write("Cat", True, font=("Ariel", 10, "normal"))


def DrawCatLeg(Cat, Angle):

    """
    Draws a cat leg using a given starter angle.
    :param Cat: The turtle
    :param Angle: The angle at which the leg is drawn
    :return: None
    """
    Cat.left(Angle)
    Cat.fd(17)
    Cat.right(-90)
    Cat.fd(6)
    Cat.fd(-6)
    Cat.right(90)
    Cat.fd(-17)
    Cat.left(-Angle)


def main():
    wn = turtle.Screen()

    Outside = turtle.Turtle()
    Inside = turtle.Turtle()
    Letters = turtle.Turtle()
    Cat = turtle.Turtle()
    i = 0
    k = 0

    Outside.speed(0)
    Inside.speed(0)
    Letters.speed(0)
    Cat.speed(0)

    Outside.width(10)
    Inside.width(10)
    Letters.width(15)
    Cat.width(2.5)
    Cat.color(0, 0, .8)

    wn.bgcolor(0, 0, 0)

    Outside.pencolor(1, 1, 1)
    Inside.pencolor(1, 1, 1)
    Letters.pencolor(1, 1, 1)

    OutsideRing(Outside, i)
    InnerRing(Inside, i, k)
    SCP(Letters)
    DrawCat(Cat)

    wn.exitonclick()


main()

